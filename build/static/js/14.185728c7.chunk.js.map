{"version":3,"sources":["app/components/adminManagement/Addadmin.js"],"names":["Addadmin","history","useHistory","Name","setName","useState","Phone","setPhone","Password","setPassword","cPassword","setCPassword","type","setType","baseUrl","process","errors","setErrors","addAdmin","async","e","preventDefault","validate","tempErrors","trim","test","Type","Object","keys","length","axios","post","user_type","then","res","push","_jsxs","children","_jsx","className","id","action","method","style","backgroundColor","htmlFor","name","placeholder","onChange","target","value","maxLength","defaultValue","onClick"],"mappings":"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","file":"static/js/14.185728c7.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Addadmin() {\n\n    const history = useHistory()\n    const [Name, setName] = useState()\n    const [Phone, setPhone] = useState()\n    const [Password, setPassword] = useState()\n    const [cPassword, setCPassword] = useState()\n    const [type, setType] = useState(\"Admin\")\n    const beckendLocalApiUrl = process.env.REACT_APP_BACKEND_LOCAL_API;\n    const beckendLiveApiUrl = process.env.REACT_APP_BACKEND_LIVE_API;\n    const nodeMode = process.env.NODE_ENV;\n    if (nodeMode === \"development\") {\n        var baseUrl = beckendLocalApiUrl;\n    } else {\n        baseUrl = beckendLiveApiUrl;\n    }\n    const [errors, setErrors] = useState({});\n\n    const validate = () => {\n        let tempErrors = {};\n        if (!Name || Name.trim() === \"\") tempErrors.Name = \"Name is required\";\n        if (!Phone || Phone.trim() === \"\") tempErrors.Phone = \"Mobile is required\";\n        else if (!/^\\d{10}$/.test(Phone)) tempErrors.Phone = \"Mobile must be 10 digits\";\n        if (!type || type.trim() === \"\") tempErrors.Type = \"Type is required\";\n        if (!Password || Password.trim() === \"\") tempErrors.Password = \"Password is required\";\n        if (!cPassword || cPassword.trim() === \"\") tempErrors.cPassword = \"Confirm Password is required\";\n        if (Password && cPassword && Password !== cPassword) tempErrors.cPassword = \"Passwords do not match\";\n        setErrors(tempErrors);\n        return Object.keys(tempErrors).length === 0;\n    };\n\n    const addAdmin = async (e) => {\n        e.preventDefault();\n        if (!validate()) return;\n        const data = await axios.post(baseUrl + \"admin/register\", {\n            Name,\n            Phone,\n            Password,\n            user_type: type\n        }).then((res) => {\n            history.push(\"/admin/alladmins\")\n        })\n    }\n\n    return (\n        <div>\n            <h4 className='text-uppercase font-weight-bold my-3 text-light'>Add New Admin</h4>\n\n            <form id=\"add_admin_form text-white\" action=\"\" method=\"post\" style={{ backgroundColor: \"rgba(0, 27, 11, 0.734)\" }}>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Name\" onChange={(e) => {\n                            setName(e.target.value)\n                        }} />\n                        {errors.Name && <small className=\"text-danger\">{errors.Name}</small>}\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"mobile\">Mobile</label>\n                        <input type=\"text\" className=\"form-control form-control\" maxLength={10} id=\"mobile\" name=\"mobile\" placeholder=\"Mobile\" onChange={(e) => setPhone(e.target.value)} />\n                        {errors.Phone && <small className=\"text-danger\">{errors.Phone}</small>}\n                    </div>\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"passowrd\">Type</label>\n                        <select className=\"form-control\" name=\"\" id=\"\" onChange={(e) => setType(e.target.value)} defaultValue={type}>\n                            <option value=\"Admin\">Admin</option>\n                            <option value=\"Agent\">Agent</option>\n                        </select>\n                        {errors.Type && <small className=\"text-danger\">{errors.Type}</small>}\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"passowrd\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Passowrd\" onChange={(e) => {\n                            setPassword(e.target.value)\n                        }} />\n                        {errors.Password && <small className=\"text-danger\">{errors.Password}</small>}\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"mobile\">Confirm Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" placeholder=\"Confirm Passowrd\" onChange={(e) => setCPassword(e.target.value)} />\n                        {errors.cPassword && <small className=\"text-danger\">{errors.cPassword}</small>}\n                    </div>\n                    <div className=\"form-group col-md-8\">\n                        <button type=\"submit\" className=\"btn btn-success float-right\" onClick={(e) => addAdmin(e)}>ADD ADMIN</button>\n                    </div>\n                </div>\n\n            </form>\n\n        </div>\n    )\n}\n"],"sourceRoot":""}