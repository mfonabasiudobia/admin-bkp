{"version":3,"sources":["app/components/transaction/Penalty&bonus.js"],"names":["Penaltybonus","data","setUser","useState","baseUrl","process","limit","setLimit","pageNumber","setPageNumber","numberOfPages","setNumberOfPages","searchList","setSearchList","searchType","setSearchType","Alluser","access_token","localStorage","getItem","headers","Authorization","concat","axios","get","then","res","admin","totalPages","type","setType","bonus","setBonus","useEffect","_jsx","_Fragment","children","className","_jsxs","style","backgroundColor","id","name","onChange","e","target","value","placeholder","event","key","map","role","_id","Name","Phone","Wallet_balance","minWidth","onClick","window","confirm","post","JSON","parse","update","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","async","currentPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","require","Datatable"],"mappings":"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","file":"static/js/22.29ffc05f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport ReactPaginate from \"react-paginate\";\nconst $ = require(\"jquery\")\n$.Datatable = require(\"datatables.net\");\nexport default function Penaltybonus() {\n\n    const [data, setUser] = useState()\n    const beckendLocalApiUrl = process.env.REACT_APP_BACKEND_LOCAL_API;\n    const beckendLiveApiUrl = process.env.REACT_APP_BACKEND_LIVE_API;\n    const nodeMode = process.env.NODE_ENV;\n    if (nodeMode === \"development\") {\n        var baseUrl = beckendLocalApiUrl;\n    } else {\n        baseUrl = beckendLiveApiUrl;\n    }\n\n\n\n    //use for pagination..\n    let [limit, setLimit] = useState(10);\n\n    const setpageLimit = (event) => {\n        let key = event.target.value\n        setLimit(key);\n    }\n    const [pageNumber, setPageNumber] = useState(0);\n    const [numberOfPages, setNumberOfPages] = useState(0);\n    //user for searching..\n    const [searchList, setSearchList] = useState(0);\n    const [searchType, setSearchType] = useState(0);\n\n    //react paginate..\n    const handlePageClick = async (data) => {\n        let currentPage = data.selected + 1;\n        setPageNumber(currentPage);\n        // scroll to the top\n        //window.scrollTo(0, 0)\n    };\n\n    //   searching handler\n    const searchHandler = (event) => {\n        let key = event.target.value\n        setSearchList(key);\n    }\n\n    const Alluser = () => {\n        const access_token = localStorage.getItem(\"token\")\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        axios.get(baseUrl + `User/all/panelty?page=${pageNumber}&_limit=${limit}&_q=${searchList}&_stype=${searchType}`, { headers })\n            .then((res) => {\n                //setUser(res.data)\n                setUser(res.data.admin)\n                setNumberOfPages(res.data.totalPages)\n                //$('table').dataTable();\n            })\n    }\n\n\n    const [type, setType] = useState()\n    const [bonus, setBonus] = useState()\n    const update = (id) => {\n        \n        const access_token = localStorage.getItem(\"token\")\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        if (type === \"bonus\") {\n            const confirm = window.confirm(\"Are you sure, you want to add bonus to this user?\")\n            if (confirm) {\n            axios.post(baseUrl + `user/bonus/${id}`,\n                {\n                    bonus: JSON.parse(bonus)\n                },\n                { headers })\n                .then((res) => {\n                    Alluser()\n                })\n            }\n        } else {\n            const confirm2 = window.confirm(\"Are you sure, you want to add penalty to this user?\")\n            if (confirm2) {\n            axios.post(baseUrl + `user/penlaty/${id}`,\n                {\n                    bonus: JSON.parse(bonus)\n                },\n                { headers })\n                .then((res) => {\n                    Alluser()\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        Alluser()\n    }, [pageNumber, limit, searchList, searchType])\n\n\n    return (\n        <>\n            {/* <h4 className='font-weight-bold my-3'>ALL CHALLANGES</h4> */}\n            <div className=\"row \">\n                <div className=\"col-12 grid-margin\">\n                    <div className=\"card\">\n                        <div className=\"card-body text-light\" style={{ backgroundColor: \"rgba(0, 27, 11, 0.734)\" }}>\n                            <h4 className=\"card-title \">penalty and Bonus</h4>\n                            {/* searching */}\n                            <div className='row'>\n                                <select className='form-control col-sm-3 m-2' id='searchType' name='searchtype' onChange={(e) => setSearchType(e.target.value)}>\n                                    <option value=\"0\">Select Search by</option>\n                                    <option value=\"Name\">Name</option>\n                                    <option value=\"Phone\">Phone</option>\n                                    <option value=\"_id\">User Id</option>\n                                </select>\n                                <input type='text' placeholder='Search...' className='form-control col-sm-4 m-2' onChange={searchHandler} />\n                                <select className='form-control col-sm-1 m-1 bg-dark text-light' id='pagelimit' name='pagelimit' onChange={setpageLimit}>\n                                    <option value=\"10\">Set limit</option>\n                                    <option value=\"20\">20</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                    <option value=\"500\">500</option>\n                                </select>\n                            </div>\n                            <div className=\"table-responsive\">\n                                <table className=\"table text-light\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th> ID</th>\n                                            <th> Name</th>\n                                            <th> Mobile </th>\n                                            <th> Balance </th>\n                                            <th> Action </th>\n                                        </tr>\n                                    </thead>\n\n\n\n                                    <tbody>\n                                        {data && data.map((data, key) => (\n\n                                            <tr role=\"row\" className=\"odd\">\n                                                <td className=\"sorting_1\">{key + 1}</td>\n                                                <td>{data._id}</td>\n                                                <td>\n\n\n                                                    {data.Name}\n\n                                                </td>\n                                                <td>{data.Phone}</td>\n                                                <td>{data.Wallet_balance}</td>\n                                                <td>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 col-lg-5\">\n                                                            <input id=\"number\" type=\"number\" className=\"form-control input-sm\" style={{ minWidth: '100px' }}\n                                                                placeholder=\"Amount\" onChange={(e) => setBonus(e.target.value)} />\n                                                        </div>\n                                                        <div className=\"col-12 col-lg-4\">\n                                                            <div className=\"form-group\">\n                                                                <select className=\"form-control input-sm\" name=\"type\" style={{ minWidth: '100px' }} onChange={(e) => setType(e.target.value)}>\n                                                                    <option value=\"penalty\">Penalty</option>\n                                                                    <option value=\"bonus\">Bonus</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-12 col-lg-3\">\n                                                            <button className=\"btn btn-sm btn-primary\" onClick={() => update(data._id)}>UPDATE</button>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n\n                                </table>\n                            </div>\n\n                            <div className='mt-4'>\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={numberOfPages}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-center\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n"],"sourceRoot":""}