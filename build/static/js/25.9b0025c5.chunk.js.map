{"version":3,"sources":["app/components/userManagement/Allusers.js"],"names":["Allusers","baseUrl","process","limit","setLimit","useState","pageNumber","setPageNumber","numberOfPages","setNumberOfPages","searchList","setSearchList","searchType","setSearchType","findByStatus","setFindByStatus","findByuserStatus","setFindByuserStatus","startDate","setStartDate","endDate","setEndDate","user","setUser","getUser","async","access_token","localStorage","getItem","headers","Authorization","concat","referral_code","user_type","url","res","axios","get","data","admin","totalPages","e","alert","useEffect","maskPhoneNumber","phone","phoneStr","toString","length","lastTwoDigits","slice","_jsxs","children","_jsx","className","style","backgroundColor","id","name","onChange","target","value","type","placeholder","event","key","onClick","map","_id","Name","Phone","href","Wallet_balance","wonAmount","totalDeposit","referral_earning","totalBonus","loseAmount","totalWithdrawl","referral_wallet","withdraw_holdbalance","hold_balance","totalPenalty","referral","verified","updatedBy","player","window","confirm","userType","post","then","console","log","blockPlayer","Link","to","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","currentPage","selected","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","require","Datatable"],"mappings":"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","file":"static/js/25.9b0025c5.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\nconst $ = require(\"jquery\")\n$.Datatable = require(\"datatables.net\");\nexport default function Allusers() {\n    const beckendLocalApiUrl = process.env.REACT_APP_BACKEND_LOCAL_API;\n    const beckendLiveApiUrl = process.env.REACT_APP_BACKEND_LIVE_API;\n    const nodeMode = process.env.NODE_ENV;\n    if (nodeMode === \"development\") {\n        var baseUrl = beckendLocalApiUrl;\n    } else {\n        baseUrl = beckendLiveApiUrl;\n    }\n\n    //use for pagination..\n    let [limit, setLimit] = useState(10);\n    const setpageLimit = (event) => {\n        let key = event.target.value\n        setLimit(key);\n    }\n    const [pageNumber, setPageNumber] = useState(0);\n    const [numberOfPages, setNumberOfPages] = useState(0);\n    //user for searching..\n    const [searchList, setSearchList] = useState(0);\n    const [searchType, setSearchType] = useState(0);\n    const [findByStatus, setFindByStatus] = useState(0);\n    const [findByuserStatus, setFindByuserStatus] = useState(\"\");\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n\n    //react paginate..\n    const handlePageClick = async (data) => {\n        let currentPage = data.selected + 1;\n        setPageNumber(currentPage);\n        // scroll to the top\n        //window.scrollTo(0, 0)\n    };\n\n    //   searching handler\n    const searchHandler = (event) => {\n        let key = event.target.value\n        setSearchList(key);\n    }\n\n    //   search by status handler\n    const searchByStatus = (event) => {\n        let key = event.target.value\n        setFindByStatus(key);\n        setFindByuserStatus(key);\n    }\n\n    const [user, setUser] = useState(false)\n    const getUser = async () => {\n        const access_token = localStorage.getItem(\"token\")\n        const headers = {\n            Authorization: `Bearer ${access_token}`\n        }\n        const referral_code = localStorage.getItem(\"referral_code\");\n        const user_type = localStorage.getItem(\"user_type\");\n\n        try {\n            let url = baseUrl + `User/all?page=${pageNumber}&_limit=${limit}&_q=${searchList}&_stype=${searchType}&_status=${findByStatus}&_Userstatus=${findByuserStatus}`;\n\n            if (user_type !== \"Admin\") {\n                url += `&referral_code=${referral_code}`;\n            }\n\n            if (startDate) {\n                url += `&start_date=${startDate}`;\n            }\n\n            if (endDate) {\n                url += `&end_date=${endDate}`;\n            }\n\n            const res = await axios.get(url, { headers });\n            setUser(res.data.admin);\n            setNumberOfPages(res.data.totalPages);\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n    const blockPlayer = (player) => {\n        const confirmBox = window.confirm(`are you sure block ${player.Name}`);\n        if (confirmBox === true) {\n            const access_token = localStorage.getItem(\"token\")\n            const headers = {\n                Authorization: `Bearer ${access_token}`\n            }\n            const userType = player.user_type == 'Block' ? 'User' : 'Block';\n            axios.post(baseUrl + `block/user/${player._id}`, { user_type: userType }, { headers })\n                .then((res) => {\n                    getUser(res.data)\n                    console.log(res.data);\n                })\n        }\n\n    }\n\n    useEffect(() => {\n        getUser()\n    }, [pageNumber, limit, searchList, searchType, findByStatus, findByuserStatus, startDate, endDate])\n\n    // Phone number masking function\n    const maskPhoneNumber = (phone) => {\n        if (!phone) return \"\";\n        const phoneStr = phone.toString();\n        if (phoneStr.length >= 10) {\n            const lastTwoDigits = phoneStr.slice(-4);\n            return `91XXXXXX${lastTwoDigits}`;\n        }\n        return phoneStr;\n    }\n\n    // Get current user type\n    const getUserType = () => {\n        return localStorage.getItem(\"user_type\");\n    }\n\n    return (\n        user && <div>\n            <h4 className='font-weight-bold my-3'>All USER LIST</h4>\n            <div className=\"row\">\n                <div className=\"col-12 grid-margin\">\n                    <div className=\"card text-white\">\n                        <div className=\"card-body text-light\" style={{ backgroundColor: \"rgba(0, 27, 11, 0.734)\" }}>\n                            <h4 className=\"card-title\">Users List</h4>\n\n                            {/* searching */}\n                            <div className='row'>\n                                <select className='form-control col-sm-3 m-2' id='searchType' name='searchtype' onChange={(e) => setSearchType(e.target.value)}>\n                                    <option value=\"0\">Select Search by</option>\n                                    <option value=\"Name\">Name</option>\n                                    <option value=\"Phone\">Phone</option>\n                                    <option value=\"_id\">User Id</option>\n                                </select>\n                                <input type='text' placeholder='Search...' className='form-control col-sm-4 m-2' onChange={searchHandler} />\n\n                                <h5>Or</h5>\n                                <select className='form-control col-sm-3 m-2' id='findByStatus' name='findByStatus' onChange={searchByStatus}>\n                                    <option value=\"0\">Search Status</option>\n                                    <option value=\"verified\">verified</option>\n                                    <option value=\"unverified\">unverified</option>\n                                    <option value=\"Block\">Blocked</option>\n                                    <option value=\"hold_balance\">Hold</option>\n                                </select>\n\n                                <select className='form-control col-sm-1 m-1 bg-dark text-light' id='pagelimit' name='pagelimit' onChange={setpageLimit}>\n                                    <option value=\"10\">Set limit</option>\n                                    <option value=\"20\">20</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                    <option value=\"500\">500</option>\n                                </select>\n                            </div>\n\n                            {/* Date Filter */}\n                            <div className='row mt-3'>\n                                <div className='col-sm-3 m-2'>\n                                    <label className='text-light'>Start Date:</label>\n                                    <input\n                                        type='date'\n                                        className='form-control'\n                                        value={startDate}\n                                        onChange={(e) => setStartDate(e.target.value)}\n                                    />\n                                </div>\n                                <div className='col-sm-3 m-2'>\n                                    <label className='text-light'>End Date:</label>\n                                    <input\n                                        type='date'\n                                        className='form-control'\n                                        value={endDate}\n                                        onChange={(e) => setEndDate(e.target.value)}\n                                    />\n                                </div>\n                                <div className='col-sm-2 m-2 d-flex align-items-end'>\n                                    <button\n                                        className='btn btn-secondary'\n                                        onClick={() => {\n                                            setStartDate(\"\");\n                                            setEndDate(\"\");\n                                        }}\n                                    >\n                                        Clear Dates\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div className=\"table-responsive\">\n                                <table className=\"table text-light\">\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th> ID</th>\n                                            <th> Name</th>\n                                            <th> Mobile </th>\n                                            <th> Balance </th>\n                                            <th> MissMatch</th>\n                                            <th>Game hold</th>\n                                            <th> Reffered By </th>\n                                            <th> Verified </th>\n                                            <th> Updated By </th>\n                                            <th> Action </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {user.map((user, key) => (\n                                            <tr key={user._id}>\n                                                <td>{key + 1}</td>\n                                                <td>{user._id}</td>\n                                                <td>\n                                                    <span className=\"pl-2 text-primary\">{user.Name}</span>\n                                                </td>\n                                                <td className='text-success'>\n                                                    {getUserType() === \"Agent\" ? (\n                                                        <span>{maskPhoneNumber(user.Phone)}</span>\n                                                    ) : (\n                                                        <a className=\"cxy flex-column\" href={`https://api.whatsapp.com/send?phone=+91${user.Phone}&text=Hello`}>\n                                                            {user.Phone}\n                                                        </a>\n                                                    )}\n                                                </td>\n                                                <td>₹{user.Wallet_balance}</td>\n\n\n\n                                                <td className={`${((user.Wallet_balance - ((user.wonAmount + user.totalDeposit + user.referral_earning + user.totalBonus) - (user.loseAmount + user.totalWithdrawl + user.referral_wallet + user.withdraw_holdbalance + user.hold_balance + user.totalPenalty))) != 0) ? 'text-danger' : 'text-success'}`}>₹ {(user.Wallet_balance - ((user.wonAmount + user.totalDeposit + user.referral_earning + user.totalBonus) - (user.loseAmount + user.totalWithdrawl + user.referral_wallet + user.withdraw_holdbalance + user.hold_balance + user.totalPenalty)))}</td>\n                                                <td>{user.hold_balance}</td>\n                                                <td className='text-success'>{user.referral}</td>\n                                                <td>\n                                                    <div className=\"badge badge-outline-success\">{user.verified}</div>\n                                                </td>\n                                                <td>{user.updatedBy}</td>\n                                                <td>\n                                                    <button type='button' className={`btn  mx-1 ${user.user_type == 'Block' ? 'btn-success' : 'btn-danger'}`} onClick={() => { blockPlayer(user) }}>{\n                                                        user.user_type == \"Block\" ? \"Unblock\" : \"Block\"\n                                                    }</button>\n                                                    <Link type='button' className=\"btn btn-info mx-1\" to={`/user/adduser/${user._id}`}>Edit User</Link>\n                                                    <Link type='button' className=\"btn btn-primary mx-1\" to={`/user/view_user/${user._id}`}>View</Link>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n\n                            <div className='mt-4'>\n                                <ReactPaginate\n                                    previousLabel={\"Previous\"}\n                                    nextLabel={\"Next\"}\n                                    breakLabel={\"...\"}\n                                    pageCount={numberOfPages}\n                                    marginPagesDisplayed={2}\n                                    pageRangeDisplayed={3}\n                                    onPageChange={handlePageClick}\n                                    containerClassName={\"pagination justify-content-center\"}\n                                    pageClassName={\"page-item\"}\n                                    pageLinkClassName={\"page-link\"}\n                                    previousClassName={\"page-item\"}\n                                    previousLinkClassName={\"page-link\"}\n                                    nextClassName={\"page-item\"}\n                                    nextLinkClassName={\"page-link\"}\n                                    breakClassName={\"page-item\"}\n                                    breakLinkClassName={\"page-link\"}\n                                    activeClassName={\"active\"}\n                                />\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"sourceRoot":""}